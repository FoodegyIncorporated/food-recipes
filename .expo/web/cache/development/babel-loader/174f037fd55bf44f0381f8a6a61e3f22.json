{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useEffect, useState } from 'react';\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged } from \"firebase/auth\";\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport app from \"../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LoginScreen = function LoginScreen() {\n  var app = app;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var auth = getAuth();\n  var navigation = useNavigation();\n  useEffect(function () {\n    var unsubscribe = onAuthStateChanged(auth, function (user) {\n      if (user) {\n        var uid = user.uid;\n        navigation.replace(\"Home\");\n      } else {\n        console.log(\"User is logged out!\");\n      }\n    });\n    return unsubscribe;\n  }, []);\n\n  var handleSignUp = function handleSignUp() {\n    createUserWithEmailAndPassword(auth, email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log(\"Registered with:\", user.email);\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  var handleLogin = function handleLogin() {\n    signInWithEmailAndPassword(auth, email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log(\"Logged in with:\", user.email);\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  return _jsxs(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: \"padding\",\n    children: [_jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        placeholder: \"Email\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        style: styles.input\n      }), _jsx(TextInput, {\n        placeholder: \"Password\",\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        style: styles.input,\n        secureTextEntry: true\n      })]\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(TouchableOpacity, {\n        onPress: handleLogin,\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Login\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: handleSignUp,\n        style: [styles.button, styles.buttonOutline],\n        children: _jsx(Text, {\n          style: styles.buttonOutlineText,\n          children: \"Register\"\n        })\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ffafcc'\n  },\n  inputContainer: {\n    width: '80%'\n  },\n  input: {\n    backgroundColor: 'white',\n    paddingHorizontal: 15,\n    paddingVertical: 20,\n    borderRadius: 10,\n    marginTop: 15\n  },\n  buttonContainer: {\n    width: '60%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 40\n  },\n  button: {\n    backgroundColor: '#0782F9',\n    width: '100%',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '700',\n    fontSize: 16\n  },\n  buttonOutline: {\n    backgroundColor: 'white',\n    marginTop: 15,\n    borderColor: '#0782F9',\n    borderWidth: 2\n  },\n  buttonOutlineText: {\n    color: '#0782F9',\n    fontWeight: '700',\n    fontSize: 16\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["/Users/princechowdury/Desktop/Comp/Food-Formula/food-formula/screens/LoginScreen.js"],"names":["React","useEffect","useState","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","onAuthStateChanged","NavigationContainer","useNavigation","app","LoginScreen","email","setEmail","password","setPassword","auth","navigation","unsubscribe","user","uid","replace","console","log","handleSignUp","then","userCredentials","catch","error","alert","message","handleLogin","styles","container","inputContainer","text","input","buttonContainer","button","buttonText","buttonOutline","buttonOutlineText","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","width","paddingHorizontal","paddingVertical","borderRadius","marginTop","padding","color","fontWeight","fontSize","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, KeyboardAvoidingView, TextInput, TouchableOpacity } from 'react-native'\nimport React, { useEffect, useState } from 'react';\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged } from \"firebase/auth\";\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport app from '../firebase'\n\nconst LoginScreen = () => {\n  const app = app;\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const auth = getAuth();\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n        if (user) {\n            const uid = user.uid;\n            navigation.replace(\"Home\");\n        }\n        else {\n            console.log(\"User is logged out!\");\n        }\n    });\n    return unsubscribe;\n  }, []);\n\n  const handleSignUp = () => {\n    createUserWithEmailAndPassword(auth, email, password)\n        .then((userCredentials) => {\n            const user = userCredentials.user;\n            console.log(\"Registered with:\", user.email);\n        })\n        .catch(error => alert(error.message))\n  };\n\n  const handleLogin = ()  => {\n    signInWithEmailAndPassword(auth, email, password)\n        .then((userCredentials) => {\n            const user = userCredentials.user;\n            console.log(\"Logged in with:\", user.email);\n        })\n        .catch(error => alert(error.message))\n  };\n\n  return (\n   <KeyboardAvoidingView\n    style={styles.container}\n    behavior=\"padding\"\n   >\n       <View style={styles.inputContainer}>\n        <TextInput \n            placeholder='Email'\n            value={email}\n            onChangeText={text => setEmail(text)}\n            style={styles.input}\n        />\n        <TextInput \n            placeholder='Password'\n            value={password}\n            onChangeText={text => setPassword(text)}\n            style={styles.input}\n            secureTextEntry\n        />\n       </View>\n       \n       <View style={styles.buttonContainer}>\n        <TouchableOpacity\n            onPress={handleLogin}\n            style={styles.button}\n        >\n            <Text style={styles.buttonText}>Login</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n            onPress={handleSignUp}\n            style={[styles.button, styles.buttonOutline]}\n        >\n            <Text style={styles.buttonOutlineText}>Register</Text>\n        </TouchableOpacity>\n       </View>\n   </KeyboardAvoidingView>\n  )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#ffafcc'\n    },\n    inputContainer: {\n        width: '80%'\n    },\n    input: {\n        backgroundColor: 'white',\n        paddingHorizontal: 15,\n        paddingVertical: 20,\n        borderRadius: 10,\n        marginTop: 15\n    },\n    buttonContainer: {\n        width: '60%',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: 40\n    },\n    button: {\n        backgroundColor: '#0782F9',\n        width: '100%',\n        padding: 15,\n        borderRadius: 10,\n        alignItems: 'center'\n    },\n    buttonText: {\n        color: 'white',\n        fontWeight: '700',\n        fontSize: 16\n    },\n    buttonOutline: {\n        backgroundColor: 'white',\n        marginTop: 15,\n        borderColor: '#0782F9',\n        borderWidth: 2\n    },\n    buttonOutlineText: {\n        color: '#0782F9',\n        fontWeight: '700',\n        fontSize: 16\n    }\n});\n\nexport default LoginScreen;"]},"metadata":{},"sourceType":"module"}